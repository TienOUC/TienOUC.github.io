(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{711:function(s,t,n){"use strict";n.r(t);var a=n(4),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"_1-eslint-简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-eslint-简介"}},[s._v("#")]),s._v(" 1. ESLint 简介")]),s._v(" "),n("p",[s._v("JavaScript 是一种动态的弱类型解释型语言，没有编译程序，所以一些错误只有在代码执行的时候才能暴露出来，而不像 C/C++ （内置 gcc/g++编译程序）等编译型语言那样，在编译阶段就可以发现问题。因此 Nicholas C. Zakas 于 2013 年 6 月创建了开源项目 "),n("a",{attrs:{href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("ESLint"),n("OutboundLink")],1),s._v("，使得原来在执行阶段才能暴露的问题提前到代码编写阶段暴露。")]),s._v(" "),n("p",[s._v("简单来说，ESLint 就是在 ECMAScript/JavaScript 代码中识别和报告模式匹配的工具，它的目标是保证代码的一致性和避免错误，提供一个插件化的 JavaScript 代码检测工具。")]),s._v(" "),n("p",[n("strong",[s._v("特点：")])]),s._v(" "),n("blockquote",[n("ul",[n("li",[s._v("ESLint 使用 "),n("a",{attrs:{href:"https://github.com/eslint/espree",target:"_blank",rel:"noopener noreferrer"}},[s._v("Espree"),n("OutboundLink")],1),s._v(" "),n("a",{attrs:{href:"#refer-anchor"}},[n("sup",[s._v("[1]")])]),s._v(" 解析 JavaScript。")]),s._v(" "),n("li",[s._v("ESLint 使用 AST "),n("a",{attrs:{href:"#refer-anchor"}},[n("sup",[s._v("[2]")])]),s._v(" 去分析代码中的模式。")]),s._v(" "),n("li",[s._v("ESLint 是完全插件化的。每一个规则都是一个插件并且可以在运行时添加更多的规则。")])])]),s._v(" "),n("h3",{attrs:{id:"_2-本文内容脑图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-本文内容脑图"}},[s._v("#")]),s._v(" 2. 本文内容脑图")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/tienouc/blog-img/202112051210245.png",alt:""}})]),s._v(" "),n("h3",{attrs:{id:"_3-理解代码检查"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-理解代码检查"}},[s._v("#")]),s._v(" 3. 理解代码检查")]),s._v(" "),n("h4",{attrs:{id:"_3-1-功能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-功能"}},[s._v("#")]),s._v(" 3.1 功能")]),s._v(" "),n("blockquote",[n("ul",[n("li",[s._v("语言语法检查：例如检查出字符串引号或者函数调用括号没有匹配等问题。")]),s._v(" "),n("li",[s._v("编码错误检查：例如检查出开发者在使用一个不存在的变量或者变量定义了却没有使用等问题。")]),s._v(" "),n("li",[s._v("代码风格检查：例如检查出开发者没有使用分号（与所选风格有关）等问题。")])])]),s._v(" "),n("h4",{attrs:{id:"_3-2-类型（方式）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-类型（方式）"}},[s._v("#")]),s._v(" 3.2 类型（方式）")]),s._v(" "),n("blockquote",[n("ul",[n("li",[s._v("编码时检查：编写代码时检查，通常表现为由 IDE 自动实时检查并进行代码提示。")]),s._v(" "),n("li",[s._v("编码后检查：编写代码后检查，通常表现为手动调用检查脚本/工具进行代码的检查或者代码保存后由 IDE 自动检查当前文件。")]),s._v(" "),n("li",[s._v("构建前检查：构建执行前检查，通常表现为将代码检查作为构建任务的一个前置切面，构建时自动触发代码检查。")]),s._v(" "),n("li",[s._v("提交前检查：git commit 前检查，通常表现为将代码检查作为 git commit 的一个 hooks 任务，代码提交前自动触发代码检查。")])])]),s._v(" "),n("h4",{attrs:{id:"_3-3-工具"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-工具"}},[s._v("#")]),s._v(" 3.3 工具")]),s._v(" "),n("p",[s._v("代码检查的实现通常不会仅仅是字符串分析处理，这其中会大量涉及到语法分析。既然涉及到语法，那么就需要对不同的代码使用不同的代码检查工具，通常来说，我们会结合 "),n("code",[s._v("Prettier")]),s._v("(格式化缩进等)，使用 "),n("code",[s._v("ESLint")]),s._v(" 工具来实现对 JavaScript 代码的检查，下面重点介绍 ESLint。")]),s._v(" "),n("h3",{attrs:{id:"_4-实现代码检查"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-实现代码检查"}},[s._v("#")]),s._v(" 4. 实现代码检查")]),s._v(" "),n("h4",{attrs:{id:"_4-1-编码后检查"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-编码后检查"}},[s._v("#")]),s._v(" 4.1 编码后检查")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("首先安装 node^6.14 环境和 ESLint 的 npm 包")])])]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("// 初始化项目\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" init -y\n\n// 安装eslint\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" eslint --save-dev\n\n//生成配置文件\n$ eslint --init\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("ul",[n("li",[n("strong",[s._v("生成初始配置文件：")])])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/tienouc/blog-img/202112051215017.gif",alt:""}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/tienouc/blog-img/202112051149037.png",alt:""}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/tienouc/blog-img/202112051149773.png",alt:""}})]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("魔法注释：")])])]),s._v(" "),n("p",[s._v("除了配置文件中配置规则，ESLint 还有一个代码中通过注释打规则补丁的办法，如下示例：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 屏蔽整行的代码检查")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" str1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${name} is a coder"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// eslint-disable-line")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 屏蔽某一个规则：如此行的no-template-curly-in-string规则")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" str2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${name} is a coder"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// eslint-disable-line no-template-curly-in-string")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("在安装好 Node 环境和 ESLint 的 npm 包后，禁用 vscode 的 ESLint、Prettier 插件（已经安装的话要禁用），测试如下代码。")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("实践")])])]),s._v(" "),n("p",[s._v("不规范代码")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//index.js文件")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ss"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'111'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("执行 "),n("code",[s._v("eslint index.js")]),s._v(" 检查命令")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("//编码后检查\n eslint eslint index.js\n/code/eslint/index.js\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":1   error  Expected space or tab after "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'//'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" comment     spaced-comment\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(":7   error  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),s._v(" is assigned a value but never used          no-unused-vars\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":1   error  Expected indentation of "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" spaces but found "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("    indent\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":11  error  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'str'")]),s._v(" is assigned a value but never used        no-unused-vars\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":11  error  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'str'")]),s._v(" is never reassigned. Use "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'const'")]),s._v(" instead  prefer-const\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":17  error  Strings must use singlequote                    quotes\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":21  error  Extra semicolon                                 semi\n\n✖ "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" problems "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" errors, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" warnings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" errors and "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" warnings potentially fixable with the "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("--fix"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" option.\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("在 "),n("code",[s._v(".eslintrc.js")]),s._v(" 中配置规则")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("\trules"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"quotes"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"semi"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no-console"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"space-before-function-paren"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0是忽略，1是警告，2是报错")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("再次执行 "),n("code",[s._v("eslint index.js")]),s._v(" 检查")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v(" eslint eslint index.js\n/code/eslint/index.js\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":1   error    Expected space or tab after "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'//'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" comment     spaced-comment\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(":7   error    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),s._v(" is assigned a value but never used          no-unused-vars\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":1   error    Expected indentation of "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" spaces but found "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("    indent\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":11  error    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'str'")]),s._v(" is assigned a value but never used        no-unused-vars\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":11  error    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'str'")]),s._v(" is never reassigned. Use "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'const'")]),s._v(" instead  prefer-const\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":17  error    Strings must use singlequote                    quotes\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":21  warning  Extra semicolon                                 semi\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(":1   warning  Unexpected console statement                    no-console\n\n✖ "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" problems "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" errors, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" warnings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" errors and "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" warning potentially fixable with the "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("--fix"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" option.\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("可以看到因为配置了新规则导致提示信息发生了变化，此时执行 "),n("code",[s._v("eslint --fix index.js")]),s._v(" 修复")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v(" eslint eslint --fix index.js\n/code/eslint/index.js\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(":7  error    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),s._v(" is assigned a value but never used    no-unused-vars\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":7  error    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'str'")]),s._v(" is assigned a value but never used  no-unused-vars\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(":1  warning  Unexpected console statement              no-console\n\n✖ "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" problems "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" errors, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" warning"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("执行完之后，可以看到下面代码中"),n("code",[s._v("缩进")]),s._v("、"),n("code",[s._v("引号")]),s._v("、"),n("code",[s._v("分号")]),s._v("、"),n("code",[s._v("var关键字")]),s._v("的报错已自动修复，但未引用的变量仍需手动做删除处理，console.log 的 warning 设置为 "),n("code",[s._v("0")]),s._v(" 即可消除（因为配置 "),n("code",[s._v('"no-console": 1')]),s._v("，所以会有 warning）。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// index.js文件")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" str "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ss"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"111"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h4",{attrs:{id:"_4-2-编码时检查"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-编码时检查"}},[s._v("#")]),s._v(" 4.2 编码时检查")]),s._v(" "),n("p",[s._v("项目开发中，若都需要像前面步骤中先执行 "),n("code",[s._v("eslint . --fix")]),s._v(" 统一格式，再 push 提交代码。或者是把指令添加到 "),n("code",[s._v("package.json")]),s._v(" 文件中，执行"),n("code",[s._v("npm run eslint")]),s._v("，再 push。这样就很麻烦，并且也不够直观，因为错误问题只有在你执行了指令之后才能看到。")]),s._v(" "),n("p",[s._v("为了在编写阶段提示错误信息，就有了可在 IDE 安装集成的格式化插件，以 VsCode 为例，安装 ESLint 插件，在设置中打开实时检查功能，并配置好相应规则即可。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//配置eslint")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"editor.codeActionsOnSave"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 保存时自动fix")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"source.fixAll.eslint"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[s._v('"eslint.quiet"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// warning时不报红色下划线，可用于处理no-console规则爆的warning")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("错误修复：若有规则冲突，可以修改项目目录下的 "),n("code",[s._v(".eslintrc.js")]),s._v(" 文件，VsCode 插件设置很傻瓜化，这里不做过多介绍。")]),s._v(" "),n("blockquote",[n("ul",[n("li",[s._v("同时安装了 ESLint 的 npm 包和 IDE 插件时，优先执行哪个配置呢？若项目中有 "),n("code",[s._v(".eslintrc.js")]),s._v(" 文件，则优先执行"),n("code",[s._v(".eslintrc.js")]),s._v(" 文件配置。")])])]),s._v(" "),n("h4",{attrs:{id:"_4-3-webpack-构建前检查"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-webpack-构建前检查"}},[s._v("#")]),s._v(" 4.3 Webpack 构建前检查")]),s._v(" "),n("ul",[n("li",[s._v("(1) 安装 ESLint 并初始化 ESLint 配置文件")])]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" eslint --dev\neslint --init\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("(2) 安装 eslint-loader")])]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" eslint-loader --dev\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("(3) webpack 配置")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("rules"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\ttest"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/.js$/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\texclude"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/node_modules/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\tuse"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"babel-loader"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint-loader"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// webpack的里的数组配置选项是右执行，即写在后面的先执行，依次往左")]),s._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("因为内部项目使用 webpack 打包，所以其他构建工具（gulp 等）略")]),s._v(" "),n("h4",{attrs:{id:"_4-4-git-提交前检查"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-git-提交前检查"}},[s._v("#")]),s._v(" 4.4 Git 提交前检查")]),s._v(" "),n("p",[s._v("两种实现方法")]),s._v(" "),n("ul",[n("li",[s._v("(1) Git Hooks")])]),s._v(" "),n("p",[s._v("Git Hook 也称之为 git 钩子，每个钩子都对应一个任务，通过 shell 脚本可以编写钩子任务触发时要具体执行的操作。\n本文关注实现 git 提交前的代码检查，所以我们只看 git commit 这个钩子，使用步骤如下：")]),s._v(" "),n("blockquote",[n("ol",[n("li",[s._v("编写 hook 任务：项目的.git/hooks 文件夹下新建一个 pre-commit 文件")])]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"before commit"')]),s._v(" //  设置 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run lint 即为执行 ESLint 检查\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[s._v("触发钩子：项目下执行 git commit 命令"),n("br"),s._v("\ngit commit 命令执行后，可以发现 commit 操作不管是否成功，都可以看到输出的 before commit 信息。但这种编写 shell 脚本的方法依然不够简洁易用。这里推荐 "),n("a",{attrs:{href:"https://typicode.github.io/husky/#/",target:"_blank",rel:"noopener noreferrer"}},[s._v("husky"),n("OutboundLink")],1),n("a",{attrs:{href:"#refer-anchor"}},[n("sup",[s._v("[4]")])]),s._v("。")])])]),s._v(" "),n("ul",[n("li",[s._v("(2) husky")])]),s._v(" "),n("blockquote",[n("ol",[n("li",[s._v("使用 "),n("code",[s._v("npm install -D husky")]),s._v(" 安装 husky。")]),s._v(" "),n("li",[s._v("在 packgae.json 中添加 prepare 脚本。")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripts"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prepare"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"husky install"')]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])]),s._v(" "),n("p",[s._v("prepare 脚本会在 npm install 安装依赖之后自动执行。也就是说当我们执行 npm install 安装完项目依赖后会执行 "),n("code",[s._v("husky install")]),s._v(" 命令，该命令会创建 "),n("code",[s._v(".husky/")]),s._v(" 目录并指定该目录为 git hooks 所在的目录。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/tienouc/blog-img/202112051836624.png",alt:""}})]),s._v(" "),n("p",[s._v("添加 git hooks，运行以下命令创建 git hooks")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("$ npx husky "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" .husky/pre-commit "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run lint"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("运行完该命令后我们会看到 "),n("code",[s._v(".husky/")]),s._v(" 目录下新增了一个名为"),n("code",[s._v("pre-commit")]),s._v(" 的 shell 脚本。也就是说在在执行 git commit 命令时会先执行 pre-commit 这个脚本。pre-commit 脚本内容如下:")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/tienouc/blog-img/202112051837047.png",alt:""}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/tienouc/blog-img/202112052212973.png",alt:""}})]),s._v(" "),n("p",[n("strong",[s._v("若 husky 版本是 v7.0+, 则需要把 npm 也升级到 v7.0+")])]),s._v(" "),n("h3",{attrs:{id:"_5-prettier-eslint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-prettier-eslint"}},[s._v("#")]),s._v(" 5. Prettier + ESLint")]),s._v(" "),n("h4",{attrs:{id:"_5-1-解决冲突"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-解决冲突"}},[s._v("#")]),s._v(" 5.1 解决冲突")]),s._v(" "),n("p",[s._v("项目中同时使用 ESLint + Prettier 时，往往会有一些冲突，比如 "),n("strong",[s._v("ESLint 默认是要双引号，加分号的。而 Prettier 默认是单引号，不加分号的。所以这两个默认配置会冲突。")]),s._v(" 本质原因是 ESLint 既负责了代码质量检测，又负责了一部分的格式美化工作，格式化的部分规则和 Prettier 不兼容。能不能让 ESLint 只负责代码质量检测而让 Prettier 负责美化呢? 社区已经有了解决方案，即 "),n("code",[s._v("eslint-config-prettier + eslint-plugin-prettier")]),s._v("。")]),s._v(" "),n("blockquote",[n("ul",[n("li",[n("code",[s._v("eslint-config-prettier")]),s._v(" 的作用是关闭 ESLint 中与 Prettier 相互冲突的规则。")]),s._v(" "),n("li",[n("code",[s._v("eslint-plugin-prettier")]),s._v(" 的作用是赋予 ESLint 用 Prettier 格式化代码的能力。")])])]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("// 安装依赖\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" eslint-config-prettier eslint-plugin-prettier -D\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("修改 "),n("code",[s._v(".eslintrc.js")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// .eslintrc.js")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 其余的配置")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extends"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"plugin:vue/essential"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"standard"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extends"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"plugin:vue/essential"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"standard"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"plugin:prettier/recommended"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 其余的配置")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[n("code",[s._v("plugin:prettier/recommended")]),s._v(" 这个规则具体做了什么？")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// node_modules/eslint-plugin-prettier/eslint-plugin-prettier.js")]),s._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// plugin:prettier/recommended 就是加载这个")]),s._v("\n\tconfigs"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\trecommended"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prettier"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t\tplugins"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prettier"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t\trules"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prettier/prettier"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"arrow-body-style"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"off"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prefer-arrow-callback"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"off"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 其他的")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("加载了 "),n("code",[s._v("node_modules/eslint-plugin-prettier/eslint-plugin-prettier.js")]),s._v(" 文件导出的 "),n("code",[s._v("configs")]),s._v(" 中的 "),n("code",[s._v("recommended")]),s._v(" 配置项。下面解析他们分别做了什么。")]),s._v(" "),n("blockquote",[n("ul",[n("li",[n("code",[s._v("extends: ['prettier']")]),s._v(": 通过 "),n("code",[s._v("eslint-config-prettier")]),s._v(" 关闭 ESLint 和 Prettier 相冲突的规则。")]),s._v(" "),n("li",[n("code",[s._v("plugins: ['prettier']")]),s._v(": 加载 "),n("code",[s._v("eslint-plugin-prettier")]),s._v("，赋予 ESLint 用 Prettier 格式化文档的功能")]),s._v(" "),n("li",[n("code",[s._v("'prettier/prettier': 'error'")]),s._v(": 让代码文件中不符合 Prettier 格式化规则的都标记为错误，结合 vscode-eslint 插件便可以看到这些错误被标记为红色，当运行 "),n("code",[s._v("eslint --fix")]),s._v(" 命令时，将自动修复这些错误。")]),s._v(" "),n("li",[n("code",[s._v("arrow-body-style")]),s._v(" 和 "),n("code",[s._v("prefer-arrow-callback")]),s._v(": 这两个规则在 ESLint 和 Prettier 中存在不可解决的冲突，所以关闭掉。")])])]),s._v(" "),n("h4",{attrs:{id:"_5-2-常用配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-常用配置"}},[s._v("#")]),s._v(" 5.2 常用配置")]),s._v(" "),n("ul",[n("li",[n("code",[s._v(".prettierrc.js")]),s._v(" 文件常用配置")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// tab缩进大小,默认为2")]),s._v("\n\ttabWidth"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用tab缩进，默认false")]),s._v("\n\tuseTabs"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用分号, 默认true")]),s._v("\n\tsemi"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用单引号, 默认false(在jsx中配置无效, 默认都是双引号)")]),s._v("\n\tsingleQuote"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 行尾逗号,默认none,可选 none|es5|all")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// es5 包括es5中的数组、对象")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// all 包括函数对象等所有可选")]),s._v("\n\ttrailingCooma"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"all"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对象中的空格 默认true")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true: { foo: bar }")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false: {foo: bar}")]),s._v("\n\tbracketSpacing"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// JSX标签闭合位置 默认false")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false: <div")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//          className=""')]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//          style={{}}")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//       >")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true: <div")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//          className=""')]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//          style={{}} >")]),s._v("\n\tjsxBracketSameLine"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 箭头函数参数括号 默认avoid 可选 avoid| always")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// avoid 能省略括号的时候就省略 例如x => x")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// always 总是有括号")]),s._v("\n\tarrowParens"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"avoid"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("ul",[n("li",[s._v("查看整个项目不符合 ESLint 配置的所有文件，并且可以一次性修改所有不符合 ESLint 配置的文件。")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在 package.json 文件中添加 checklint 和 reviselint 命令")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripts"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"checklint"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint --ext .js,.vue --ignore-path .gitignore ."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"reviselint"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint --fix --ext .js,.vue --ignore-path .gitignore ."')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"参考资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),n("div",{attrs:{id:"refer-anchor"}}),s._v(" "),n("p",[n("strong",[s._v("[1]")]),s._v(" Espress 是 "),n("a",{attrs:{href:"https://esprima.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Esprima"),n("OutboundLink")],1),s._v(" 的一个分支，Esprima 是一个用于教育目的 ECMAScript(JavaScript) 解析架构，主要用于多用途分析。其本身也是使用 ECMAScript 编写的。")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("主要特性：")])])]),s._v(" "),n("blockquote",[n("ul",[n("li",[s._v("支持"),n("a",{attrs:{href:"https://www.ecma-international.org/publications-and-standards/standards/ecma-262/",target:"_blank",rel:"noopener noreferrer"}},[s._v("ECMAScript 5.1"),n("OutboundLink")],1)]),s._v(" "),n("li",[s._v("抽象语法树 (AST) 敏感的格式，兼容 Mozilla "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Parser",target:"_blank",rel:"noopener noreferrer"}},[s._v("Parser API"),n("OutboundLink")],1)]),s._v(" "),n("li",[s._v("经过重度测试，超过 500 个单元测试以及 100% 的代码覆盖")]),s._v(" "),n("li",[s._v("可选跟踪语法节点定位 (index-based and line-column)")]),s._v(" "),n("li",[s._v("超级快，速度是 UglifyJS parse-js 的 2.5 倍("),n("a",{attrs:{href:"https://esprima.org/test/compare.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("speed comparison"),n("OutboundLink")],1),s._v(")")])])]),s._v(" "),n("p",[n("strong",[s._v("[2]")]),s._v(" "),n("a",{attrs:{href:"https://www.jianshu.com/p/9d47ff51ffbe",target:"_blank",rel:"noopener noreferrer"}},[s._v("javascript ast 介绍"),n("OutboundLink")],1)]),s._v(" "),n("p",[n("strong",[s._v("[3]")]),s._v(" "),n("a",{attrs:{href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("ESLint"),n("OutboundLink")],1)]),s._v(" "),n("p",[n("strong",[s._v("[4]")]),s._v(" "),n("a",{attrs:{href:"https://typicode.github.io/husky/#/",target:"_blank",rel:"noopener noreferrer"}},[s._v("husky"),n("OutboundLink")],1),s._v(" | "),n("a",{attrs:{href:"https://juejin.cn/post/6947200436101185566",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHook 工具 —— husky（格式化代码）"),n("OutboundLink")],1)]),s._v(" "),n("p",[n("strong",[s._v("[5]")]),s._v(" "),n("a",{attrs:{href:"https://prettier.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Prettier"),n("OutboundLink")],1),s._v(" | "),n("a",{attrs:{href:"https://juejin.cn/post/7018053886699110407",target:"_blank",rel:"noopener noreferrer"}},[s._v("Eslint + Prettier + stylelint + Husky + Lint-staged 规范你的工程代码规范"),n("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);