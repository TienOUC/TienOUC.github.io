(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{605:function(t,s,n){"use strict";n.r(s);var a=n(4),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("JS 代码有 "),n("code",[t._v("ESLint")]),t._v(" 等格式化工具来校验、格式化，相对的，CSS 也有格式化工具。本文就主流 CSS 格式化工具 "),n("code",[t._v("Stylelint")]),t._v(" 以及我们为什么要做 CSS 样式格式化略作介绍。")]),t._v(" "),n("h3",{attrs:{id:"_1-为什么-css-也要做格式化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么-css-也要做格式化"}},[t._v("#")]),t._v(" 1. 为什么 CSS 也要做格式化")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("目的：")])])]),t._v(" "),n("p",[t._v("减少浏览器 Reflow（回流），提升渲染 DOM 的性能。")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("浏览器渲染流程：")])])]),t._v(" "),n("blockquote",[n("ol",[n("li",[t._v("解析 html、css，构建 dom、css 树。")]),t._v(" "),n("li",[t._v("合并 dom、css 树为 render 树。")]),t._v(" "),n("li",[t._v("布局 render 树：有了 render 树，浏览器已经知道哪些网页中有哪些节点，各个节点的 css 定义和以及它们的从属关系，从而计算出每个节点在屏幕中的位置。")]),t._v(" "),n("li",[t._v("绘制 render 树：按照计算出来的规则，通过显卡把内容绘制到屏幕上。")])])]),t._v(" "),n("p",[t._v("css 样式从解析到显示在屏幕上发生在上述 2、3、4 步骤中，浏览器并不是一获取到 css 样式就立马开始解析，而是根据 css 样式的书写顺序将之按照 dom 树的结构分布 render 样式，完成第 2 步，然后开始遍历每个树结点的 css 样式进行解析，此时的 css 样式的遍历顺序完全是按照之前的书写顺序。在解析过程中，一旦浏览器发现某个元素的定位变化影响布局，则需要倒回去重新渲染。例如如下的样式书写书序：")]),t._v(" "),n("div",{staticClass:"language-css line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("当浏览器解析到 position 的时候突然发现该元素是绝对定位元素，需要脱离文档流，而之前却是按照普通元素进行解析的，所以不得不重新渲染（此时发生 Reflow，Reflow 又会导致 Repaint），解除该元素在文档中所占位置，然而由于该元素的占位发生变化，其他元素也可能会受到它回流的影响而重新排位。最终导致 3 步骤花费的时间太久而影响到 4 步骤的显示，影响了用户体验。")]),t._v(" "),n("p",[n("strong",[t._v("所以 css 的书写顺序对于渲染引擎的性能也是很重要的。")])]),t._v(" "),n("p",[t._v("⚠️ 注意：")]),t._v(" "),n("blockquote",[n("ol",[n("li",[t._v("render 树的结构不等同于 dom 树的结构，一些设置 "),n("code",[t._v("display:none")]),t._v(" 的节点不会被放在 render 树中，但会在 dom 树中。")]),t._v(" "),n("li",[t._v("有些情况，比如修改了元素的样式，浏览器并不会立刻 reflow 或 repaint，而是把这些操作积攒一批，然后做一次 reflow，这也叫做异步 reflow。但在某些情况下，比如改变窗口，改变页面默认的字体等，浏览器会马上进行 reflow。")]),t._v(" "),n("li",[t._v("为了更好的用户体验，渲染引擎会尽可能早的将内容呈现到屏幕上，并不会等到所有的 html 都解析完成之后再去构建和布局 render 树。而是解析完一部分内容就显示一部分内容，同时，可能还在通过网络下载其余内容。")])])]),t._v(" "),n("h3",{attrs:{id:"_2-css-书写规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-css-书写规则"}},[t._v("#")]),t._v(" 2. CSS 书写规则")]),t._v(" "),n("p",[t._v("书写顺序：")]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("位置属性(position, top, right, z-index, display, float 等)")]),t._v(" "),n("li",[t._v("大小(width, height, padding, margin)")]),t._v(" "),n("li",[t._v("文字系列(font, line-height, letter-spacing, color- text-align 等)")]),t._v(" "),n("li",[t._v("背景(background, border 等)")]),t._v(" "),n("li",[t._v("其他(animation, transition 等)")])])]),t._v(" "),n("p",[t._v("语法：")]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("命名一般为小写英文字母。")]),t._v(" "),n("li",[t._v("为了代码的易读性，在每个声明块的左花括号前添加一个空格。")]),t._v(" "),n("li",[t._v("每条声明语句的 "),n("code",[t._v(":")]),t._v(" 后应该插入一个空格。")]),t._v(" "),n("li",[t._v("所有声明语句都应当以分号结尾。最后一条声明语句后面的分号是可选的，但是，如果省略这个分号，代码可能更易出错。")]),t._v(" "),n("li",[t._v("对于属性值或颜色参数，省略小于 1 的小数前面的 0 （例如: .5 代替 0.5；-.5px 代替 -0.5px）。")]),t._v(" "),n("li",[t._v("十六进制值应该全部小写，例如: #fff。")]),t._v(" "),n("li",[t._v("尽量使用简写形式的十六进制值，例如: 用 #fff 代替 #ffffff。")]),t._v(" "),n("li",[t._v("避免为 0 值指定单位，例如: 用 margin: 0; 代替 margin: 0px;。")])])]),t._v(" "),n("h3",{attrs:{id:"_3-stylelint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-stylelint"}},[t._v("#")]),t._v(" 3. Stylelint")]),t._v(" "),n("h4",{attrs:{id:"_3-1-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-优点"}},[t._v("#")]),t._v(" 3.1 优点")]),t._v(" "),n("ul",[n("li",[t._v("其支持 "),n("code",[t._v("Less")]),t._v("、"),n("code",[t._v("Sass")]),t._v(" 这类预处理器。")]),t._v(" "),n("li",[t._v("在社区活跃度上，有非常多的 第三方插件。")]),t._v(" "),n("li",[t._v("在 "),n("code",[t._v("Facebook")]),t._v("，"),n("code",[t._v("Github")]),t._v("，"),n("code",[t._v("WordPress")]),t._v(" 等公司得到实践，能够覆盖很多场景。")])]),t._v(" "),n("h4",{attrs:{id:"_3-2-使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-使用"}},[t._v("#")]),t._v(" 3.2 使用")]),t._v(" "),n("ul",[n("li",[t._v("安装依赖")])]),t._v(" "),n("p",[n("code",[t._v("npm install stylelint stylelint-config-recess-order stylelint-config-standard stylelint-order stylelint-scss")])]),t._v(" "),n("p",[n("code",[t._v("stylelint-scss")])]),t._v(" "),n("blockquote",[n("p",[t._v("scss 拓展，增加支持 scss 语法")])]),t._v(" "),n("p",[n("code",[t._v("stylelint-order")])]),t._v(" "),n("blockquote",[n("p",[t._v("该插件的作用是强制你按照某个顺序编写 css。例如先写定位，再写盒模型，再写内容区样式，最后写 CSS3 相关属性。这样可以极大的保证我们代码的可读性。")])]),t._v(" "),n("p",[n("code",[t._v("stylelint-config-standard")])]),t._v(" "),n("blockquote",[n("p",[t._v("作用：配置 Stylelint 规则。\n官方的代码风格 ：stylelint-config-standard。该风格是 Stylelint 的维护者汲取了 GitHub、Google、Airbnb 多家之长生成的。")])]),t._v(" "),n("p",[n("code",[t._v("stylelint-config-recess-order")])]),t._v(" "),n("blockquote",[n("p",[t._v("stylelint-order 插件的第三方配置")])]),t._v(" "),n("ul",[n("li",[t._v("配置 "),n("code",[t._v(".stylelintrc.json")]),t._v(" 文件")])]),t._v(" "),n("blockquote",[n("p",[t._v("在 package.json 中的 stylelint 属性指定规则。"),n("br"),t._v("\n在.stylelintrc 文件中指定，文件格式可以是 JSON 或者 YAML。也可以给该文件加后缀，如：.stylelintrc.json,.stylelintrc.yaml,.stylelintrc.yml,.stylelintrc.js。"),n("br"),t._v("\nstylelint.config.js 文件，该文件 exports 一个配置对象。")])]),t._v(" "),n("p",[n("strong",[t._v("按顺序查找，以上三种方式任何一项有值，就会结束查找")])]),t._v(" "),n("p",[t._v("在项目根目录新建"),n("code",[t._v(".stylelintrc.json")]),t._v(" 文件，复制以下内容")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylelint-config-standard"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylelint-config-recess-order"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\trules"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"at-rule-no-unknown" 让 Stylelint 支持 SCSS 语法中的 mixin、extend、content 语法。')]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"at-rule-no-unknown"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ignoreAtRules"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mixin"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extend"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"include"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tindentation"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no-descending-specificity"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止特异性较低的选择器在特异性较高的选择器之后重写")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("p",[n("strong",[t._v("rules 优先级大于 extends，建议采用 extends 方式统一管理")])]),t._v(" "),n("p",[t._v("片段禁用规则")]),t._v(" "),n("div",{staticClass:"language-css line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* stylelint-disable */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* （请说明禁止检测的理由）前端组件限制类名 */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".cropper_topContainer .img-preview")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 none"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* stylelint-enable */")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("p",[t._v("fix 方式")]),t._v(" "),n("p",[n("code",[t._v("stylelint --fix")]),t._v(" 更多语法规则请参考:"),n("a",{attrs:{href:"https://stylelint.io/user-guide/usage/cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("stylelint.io"),n("OutboundLink")],1)]),t._v(" "),n("ul",[n("li",[t._v("vscode 插件")])]),t._v(" "),n("p",[t._v("安装 "),n("code",[t._v("stylelint-plus")]),t._v("、"),n("code",[t._v("Vetur")]),t._v("、"),n("code",[t._v("Beautify")]),t._v(" 插件")]),t._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stylelint.autoFixOnSave"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 保存自动格式化")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vetur.format.defaultFormatter.html"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"js-beautify-html"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 格式化模板")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vetur.format.defaultFormatterOptions"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"js-beautify-html"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"wrap_attributes"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"force-aligned"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个属性后开始折行，并对齐")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("p",[n("code",[t._v("ctrl/cmd + s")]),t._v(" 自动修复")])])}),[],!1,null,null,null);s.default=e.exports}}]);